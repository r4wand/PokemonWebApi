// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PokemonWebApi.Models;

namespace PokemonWebApi.Migrations
{
    [DbContext(typeof(PokedexContext))]
    partial class PokedexContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AbilityBreed", b =>
                {
                    b.Property<int>("AbilitiesId")
                        .HasColumnType("integer");

                    b.Property<int>("BreedsId")
                        .HasColumnType("integer");

                    b.HasKey("AbilitiesId", "BreedsId");

                    b.HasIndex("BreedsId");

                    b.ToTable("AbilityBreed");
                });

            modelBuilder.Entity("BreedType", b =>
                {
                    b.Property<int>("BreedsId")
                        .HasColumnType("integer");

                    b.Property<int>("TypesId")
                        .HasColumnType("integer");

                    b.HasKey("BreedsId", "TypesId");

                    b.HasIndex("TypesId");

                    b.ToTable("BreedType");
                });

            modelBuilder.Entity("PokemonWebApi.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("PokemonWebApi.Models.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("EvolvedFromId")
                        .HasColumnType("integer");

                    b.Property<int?>("EvolvedToId")
                        .HasColumnType("integer");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EvolvedFromId");

                    b.HasIndex("EvolvedToId");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("PokemonWebApi.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("AbilityBreed", b =>
                {
                    b.HasOne("PokemonWebApi.Models.Ability", null)
                        .WithMany()
                        .HasForeignKey("AbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonWebApi.Models.Breed", null)
                        .WithMany()
                        .HasForeignKey("BreedsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BreedType", b =>
                {
                    b.HasOne("PokemonWebApi.Models.Breed", null)
                        .WithMany()
                        .HasForeignKey("BreedsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonWebApi.Models.Type", null)
                        .WithMany()
                        .HasForeignKey("TypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonWebApi.Models.Breed", b =>
                {
                    b.HasOne("PokemonWebApi.Models.Breed", "EvolvedFrom")
                        .WithMany()
                        .HasForeignKey("EvolvedFromId");

                    b.HasOne("PokemonWebApi.Models.Breed", "EvolvedTo")
                        .WithMany()
                        .HasForeignKey("EvolvedToId");

                    b.Navigation("EvolvedFrom");

                    b.Navigation("EvolvedTo");
                });
#pragma warning restore 612, 618
        }
    }
}
